function [fluence, nPhoton] = ReadHis( filenm, muas, freq )
% function [fluence, nPhoton] = ReadHis( filenm, muas, freq )
%
% Read the History file generated by tMCimg and determine the
% number of photons received at each detector and calculate the
% fluence at each detector based on the given absorption
% coefficient of each tissue type and the modulation frequency
%
% filenm - The file name of the history file with out the
%          .his extention.  The .inp file of the same name must
%          also be present
%
% muas   - The mua of each tissue type.  Each tissue type is
%          a different column.  Rows can be added to perform
%          the fluence calculation simultaneously for different
%          sets of absorption coefficients. Units are per mm.
%        
% freq   - Modulation frequency of the source in MHz
%

  w = 2*pi*freq*1e6;
  clight = 2.99e11;
  
  file = sprintf( '%s.inp', filenm);
  fid = fopen(file, 'r');
  nPhotons = fscanf( fid, '%d', 1);
  seed = fscanf( fid, '%ld', 1);
  src = fscanf( fid, '%lf', 3);
  srcn = fscanf( fid, '%lf', 3);
  trange = fscanf( fid, '%lf', 3);
  imgfile = fscanf( fid, '%s', 1);
  xrange = fscanf( fid, '%lf', 4);
  yrange = fscanf( fid, '%lf', 4);
  zrange = fscanf( fid, '%lf', 4);
  nTissue = fscanf( fid, '%d', 1);
  for idx=1:nTissue
    layer(:,idx) = fscanf( fid, '%lf', 4);
    musps(idx) = layer(1,idx) * (1-layer(2,idx));
  end
  nDet = fscanf( fid, '%d', 2);
  fclose(fid);
  
  wv = w/clight/layer(1,4);
  
  file = sprintf( '%s.his', filenm);
  fid = fopen(file, 'rb');
  a = fread(fid,'float32');
  fclose(fid);
%  nPhotonsDet = size(a,1)/(nTissue+1);
  nPhotonsDet = floor(size(a,1)/(nTissue+1));

  a = reshape(a(1:nPhotonsDet*(nTissue+1)),[1+nTissue,nPhotonsDet])';

  for idxLoop = 1:size(muas,1)
    for idx=1:size(muas,2)
      b(:,idx+1) = a(:,idx+1) * (sqrt(-1)*wv  - muas(idxLoop,idx));
    end
  
    foo = b(:,2:size(a,2));
    foo = sum(foo,2);
    foo = exp(foo);

    for idx = 1:nDet(1)
      list = find((a(:,1)+1)==idx);
      nPhoton(idx) = length(list);

      if ~isempty(list)
	fluence(idxLoop, idx) = sum(foo(list));
      end
    end
  end

  fluence = fluence / (nPhotons * pi * nDet(2)^2);







% function [bobobo nbPhotonsSimules nb_tissus muaEachTiss] = lirehis(varargin)
% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% %%%%%       Simulations Monte-Carlo       %%%%%
% %%%%%      Lecture des fichiers .his      %%%%%
% %%%%%        Calcul de DPF et phi0        %%%%%
% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 
% % Lecture de fichiers d'output de tMCimg
% %       par Michèle Desjardins, été 2009
% % Lire le fichier *.his, qui donne la longueur et la durée du trajet de
% % chaque photon, de manière (lorsqu'un ou plusieurs détecteurs sont
% % spécifiés) ordonnée comme suit :
%     % Chaque ligne = pour 1 photon :
%     % #det | dt | dx tissu 0 | dx tissu 1 | ... | dx tissu n
%     % Donc la colonne 1 donne le numéro du détecteur ayant vu le photon; 
%     %      la colonne 2 la durée du parcours du photon dans le volume;
%     %      la colonne 3 la longueur du parcours du photon dans le tissu 0;
%     %      ... les colonnes suivantes la longueur du parcours du photon
%     %      dans chaque type de tissu.
% % Le fichier contient donc Nphotons * (nTissus+2) lignes.
% % ...
% % ... le tout, X fois pour X sources et détecteurs.
% 
% t = varargin{1};
% nphotons = varargin{2};
% ND = varargin{3};
% ntissus = varargin{4};
% numTimeGates = varargin{5};
%     
%     % Chargement des données
%     % Ouvrir et lire le fichier, puis le fermer:
% 
%     topen = fopen(t,'r');
%     lu = fread(topen, inf, 'float32');
% 
%          history = reshape(lu, 8, length(lu)/8)';
%         % Le comptage des détecteurs commence à 0 !!
%         history(:,1) = history(:,1)+1;
%         
%         % Le fichier .cfg contient 1 source et 11 détecteurs dans le cas de
%         % la patch motrice de 12 optodes. Pour retrouver l'ordre correct
%         % des numéros de détecteurs, il faut insérer la source à sa
%         % position... :
%         % Numéro de l'optode
%         for lettre = 1:length(lenom)
%             if ~isempty(str2num(lenom(lettre))) && isempty(str2num(lenom(lettre+1)))
%                 % Le premier nombre dans le nom du fichier .cfg est
%                 % supposé être le numéro de l'optode!
%                 optodeNumber = str2num(lenom(lettre));
%                 break
%             elseif ~isempty(str2num(lenom(lettre))) && ~isempty(str2num(lenom(lettre+1)))
%                 optodeNumber = str2num(lenom(lettre:lettre+1));
%                 break
%             end
%         end
%         detNumsInHis = history(:,1); % numéros des détecteurs ayant mesuré les photons
%         toBePushed = find(detNumsInHis>=optodeNumber); % ceux qui sont après l'optode source
%         detNumsInHis(toBePushed) = detNumsInHis(toBePushed)+1; % doivent être décalés de 1
%         history(:,1) = detNumsInHis;
%         
%     end
%     fclose(ouvert);
%     clear ouvert
%     
% %     % Sauvegarde en format Matlab... est-ce que ça prend plus d'espace mémoire?
% %     nomfichier = horzcat('history_',lenom,'.mat');
% %     save(nomfichier,'history');
%     % Bah, peut-être pas nécessaire, puisqu'il suffit d'un fread et reshape...
% 
%     if nargout > 0
%         bobobo{j} = history;
%         nbPhotonsSimules = nphotons;
%         nb_tissus = ntissus;
%         muaEachTiss = tissuesMua;
%     end
%         
% 
% % % % end
% 
% 
